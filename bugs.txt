#
# [file:#lines]
# desc
#

[http.c:105]
In zookd.c, the buffer reqpath is declared with size 2048 bytes. 
However, one can write past the end of this buffer by sending the
server a GET request where REQUEST-URI is greater than 2066 characters.

	url_decode(reqpath, sp1);

[http.c:159]
In the function http_request_headers, value is a buffer of size
512 bytes. However, one can write past the end of this buffer by
passing a header field with a value longer 535 characters.

	url_decode(value, sp);

[http.c:165]
In the function http_request_headers, envvar is a buffer of size
512 bytes. However, one can write past the end of this buffer by
passing a header field with a key that is unexpectedly long. A key
of 1043-1046 causes the server to return an empty response; 1047
will cause the server to hang; and 1048 will cause the server
to crash.

	sprintf(envvar, "HTTP_%s", buf);

[http.c:282]
In the function http_serve, the function strcat is used to append
the buffer pn with the buffer name. The buffer pn is only 1024
bytes so if name is too long, this will cause an overflow. Sending
a path with numerous '/' characters will do this - I was able to
cause the server to hang by sending a custom path of length 1009
characters.

    strcat(pn, name);
